package capacitores;


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import static javafx.application.Application.launch;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author alberto
 */
public class Calculadora extends javax.swing.JFrame {

    private String[] args;

    /**
     * Creates new form inicio
     */
    public Calculadora() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        unidades.addItem("Yotta");
        unidades.addItem("Zetta");
        unidades.addItem("Exa");        
        unidades.addItem("Peta");
        unidades.addItem("Tera");
        unidades.addItem("Giga");
        unidades.addItem("Mega");
        unidades.addItem("Kilo");        
        unidades.addItem("Deca");
        unidades.addItem("Yocto");
        unidades.addItem("Deci");
        unidades.addItem("Centi");
        unidades.addItem("Mili");        
        unidades.addItem("Micro");
        unidades.addItem("Nano");
        unidades.addItem("Pico");
        unidades.addItem("Femto");
        unidades.addItem("Atto");        
        unidades.addItem("Zepto");
        unidades.addItem("Yocto");
        unidades2.addItem("Yotta");
        unidades2.addItem("Zetta");
        unidades2.addItem("Exa");        
        unidades2.addItem("Peta");
        unidades2.addItem("Tera");
        unidades2.addItem("Giga");
        unidades2.addItem("Mega");
        unidades2.addItem("Kilo");        
        unidades2.addItem("Deca");
        unidades2.addItem("Deci");
        unidades2.addItem("Centi");
        unidades2.addItem("Mili");        
        unidades2.addItem("Micro");
        unidades2.addItem("Nano");
        unidades2.addItem("Pico");
        unidades2.addItem("Femto");
        unidades2.addItem("Atto");        
        unidades2.addItem("Zepto");
        unidades2.addItem("Yocto");

        Date sistfecha= new Date();
        SimpleDateFormat formato= new SimpleDateFormat("dd-MMM-YYYY");
        jLabel1.setText(formato.format(sistfecha));
        Timer tiempo=new Timer(100, new Calculadora.horas());
        tiempo.start();
    }
    class horas implements ActionListener{

        @Override
        public void actionPerformed(ActionEvent e) {
            Date sisHora=new Date();
            String pmAm="hh:mm:ss a";
            SimpleDateFormat format=new SimpleDateFormat(pmAm);
            Calendar hoy=Calendar.getInstance();
           jLabel2.setText(String.format(format.format(sisHora),hoy));

        }
    

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        unidades = new javax.swing.JComboBox<>();
        unidades2 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Verdana", 3, 18)); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel2.setFont(new java.awt.Font("Verdana", 3, 18)); // NOI18N
        jLabel2.setText("jLabel2");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 0, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "CAPACITOES"
            }
        ));
        jTable1.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 360, 330));

        jButton1.setText("Generar tabla");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, -1, -1));
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 110, -1));
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 80, 100, -1));

        jButton2.setText("Resultado P");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 170, -1, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 150, 160, 60));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "CAPACITORES"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 150, 340, 330));

        jButton3.setText("Generar tabla 2");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 80, -1, -1));

        jLabel4.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        jLabel4.setForeground(java.awt.Color.white);
        jLabel4.setText("capacitores en serie");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 50, -1, -1));

        jLabel5.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        jLabel5.setForeground(java.awt.Color.white);
        jLabel5.setText("capacitores en paralelo");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, -1, -1));

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane4.setViewportView(jTextArea2);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 250, 160, 60));

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane5.setViewportView(jTextArea3);

        jPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 350, 160, 60));

        jButton4.setText("Resultado S");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 260, -1, -1));

        jButton5.setText("Resultado total");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 350, -1, -1));

        jButton6.setText("Dibujar diagrama");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 450, -1, -1));

        jButton7.setBackground(java.awt.Color.gray);
        jButton7.setFont(new java.awt.Font("Ubuntu", 2, 15)); // NOI18N
        jButton7.setForeground(java.awt.Color.white);
        jButton7.setText("Regresar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        unidades.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ELIGE TUS UNIDADES" }));
        unidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unidadesActionPerformed(evt);
            }
        });
        jPanel1.add(unidades, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 160, 210, -1));
        unidades.getAccessibleContext().setAccessibleName("");

        unidades2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ELIGE TUS UNIDADES" }));
        unidades2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unidades2ActionPerformed(evt);
            }
        });
        jPanel1.add(unidades2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 250, 210, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/por2.jpg"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 1290, 760));
        jLabel3.getAccessibleContext().setAccessibleParent(jLabel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
int n,b=2;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

n=Integer.parseInt(jTextField1.getText());
       
DefaultTableModel mode= new DefaultTableModel();
Object filas[]= new Object[n];
Object columnas[]=new Object[b];
mode=new DefaultTableModel(n, b);
jTable1.setModel(mode);

// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
jTextArea1.setText(Float.toString(suma()));

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
n=Integer.parseInt(jTextField2.getText());
       
DefaultTableModel mode= new DefaultTableModel();
Object filas[]= new Object[n];
Object columnas[]=new Object[b];
mode=new DefaultTableModel(n, b);
jTable2.setModel(mode);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
jTextArea2.setText(Float.toString(sumaserie()));
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
jTextArea3.setText(Float.toString(sumatotal()));
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
         Painting.launch(Painting.class,args);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Eleccion().setVisible(true);
            }
        });
        dispose();// TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed
float unidades1,unidades3;
    private void unidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unidadesActionPerformed
      
        String tipos = (String) unidades.getSelectedItem();
        if (tipos.equals("Yotta")) {
      unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*(float)(1*Math.pow(10, 24)));
        jTextArea1.setText(Float.toString(unidades1)+"   "+"AMPERES");
        }
         if (tipos.equals("Zetta")) {
    unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*(float)(1*Math.pow(10, 21)));
        jTextArea1.setText(Float.toString(unidades1)+"AMPERES");
         }        
        if (tipos.equals("Exa")) {
    unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*(float)(1*Math.pow(10, 18)));
        jTextArea1.setText(Float.toString(unidades1)+"AMPERES");
        }
          if (tipos.equals("Peta")) {
    unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*(float)(1*Math.pow(10, 15)));
         jTextArea1.setText(Float.toString(unidades1));
          }
          if (tipos.equals("Tera")) {
    unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*(float)(1*Math.pow(10, 12)));
        jTextArea1.setText(Float.toString(unidades1));}

          if (tipos.equals("Giga")) {
      unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*(float)(1*Math.pow(10, 9)));
        jTextArea1.setText(Float.toString(unidades1));
        }
         if (tipos.equals("Mega")) {
    unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*(float)(1*Math.pow(10, 6)));
        jTextArea1.setText(Float.toString(unidades1));
         }        
        if (tipos.equals("Kilo")) {
    unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*(float)(1*Math.pow(10, 3)));
        jTextArea1.setText(Float.toString(unidades1));
        }
          if (tipos.equals("Hecto")) {
    unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*(float)(1*Math.pow(10, 2)));
         jTextArea1.setText(Float.toString(unidades1));
          }

          if (tipos.equals("Deca")) {
    unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*(float)(1*Math.pow(10, 1)));
        jTextArea1.setText(Float.toString(unidades1));//.000000000000000000000001
          }
        // TODO add your handling code here:
    

        if (tipos.equals("Deci")) {
      unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*.1);
        jTextArea1.setText(Float.toString(unidades1));
        }
         if (tipos.equals("Centi")) {
    unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*.01);
        jTextArea1.setText(Float.toString(unidades1));
         }        
        if (tipos.equals("Mili")) {
    unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*.001);
        jTextArea1.setText(Float.toString(unidades1));
        }
          if (tipos.equals("Micro")) {
    unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*.0001);
         jTextArea1.setText(Float.toString(unidades1));
          }
          if (tipos.equals("Nano")) {
    unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*.00001);
        jTextArea1.setText(Float.toString(unidades1));}

          if (tipos.equals("Pico")) {
      unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*(float)(1*Math.pow(10, -12)));
        jTextArea1.setText(Float.toString(unidades1));
        }
         if (tipos.equals("Femto")) {
    unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*(float)(1*Math.pow(10, -15)));
        jTextArea1.setText(Float.toString(unidades1));
         }        
        if (tipos.equals("Atto")) {
    unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*(float)(1*Math.pow(10, -18)));
        jTextArea1.setText(Float.toString(unidades1));
        }
          if (tipos.equals("Zepto")) {
    unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*(float)(1*Math.pow(10, -21)));
         jTextArea1.setText(Float.toString(unidades1));
          }

          if (tipos.equals("Yocto")) {
    unidades1=(float) (Float.parseFloat(jTextArea1.getText().toString())*(float)(1*Math.pow(10, -24)));
        jTextArea1.setText(Float.toString(unidades1));//.000000000000000000000001

          }
        // TODO add your handling code here:
    }//GEN-LAST:event_unidadesActionPerformed
    
    private void unidades2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unidades2ActionPerformed
        String tipos = (String) unidades2.getSelectedItem();
         if (tipos.equals("Yotta")) {
        unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*(float)(1*Math.pow(10, 24)));
        jTextArea2.setText(Float.toString(unidades3));
        }
         if (tipos.equals("Zetta")) {
    unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*(float)(1*Math.pow(10, 21)));
        jTextArea2.setText(Float.toString(unidades3));
         }        
        if (tipos.equals("Exa")) {
    unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*(float)(1*Math.pow(10, 18)));
        jTextArea2.setText(Float.toString(unidades3));
        }
          if (tipos.equals("Peta")) {
    unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*(float)(1*Math.pow(10, 15)));
         jTextArea2.setText(Float.toString(unidades3));
          }
          if (tipos.equals("Tera")) {
    unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*(float)(1*Math.pow(10, 12)));
        jTextArea2.setText(Float.toString(unidades3));}

          if (tipos.equals("Giga")) {
      unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*(float)(1*Math.pow(10, 9)));
        jTextArea2.setText(Float.toString(unidades3));
        }
         if (tipos.equals("Mega")) {
    unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*(float)(1*Math.pow(10, 6)));
        jTextArea2.setText(Float.toString(unidades3));
         }        
        if (tipos.equals("Kilo")) {
    unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*(float)(1*Math.pow(10, 3)));
        jTextArea2.setText(Float.toString(unidades3));
        }
          if (tipos.equals("Hecto")) {
    unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*(float)(1*Math.pow(10, 2)));
         jTextArea2.setText(Float.toString(unidades3));
          }

          if (tipos.equals("Deca")) {
    unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*(float)(1*Math.pow(10, 1)));
        jTextArea2.setText(Float.toString(unidades3));//.000000000000000000000001
          }
        if (tipos.equals("Deci")) {
      unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*.1);
        jTextArea2.setText(Float.toString(unidades3));
        }
         if (tipos.equals("Centi")) {
    unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*(float)(1*Math.pow(10, -2)));
        jTextArea2.setText(Float.toString(unidades3));
         }        
        if (tipos.equals("Mili")) {
    unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*(float)(1*Math.pow(10, -3)));
        jTextArea2.setText(Float.toString(unidades3));
        }
          if (tipos.equals("Micro")) {
    unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*(float)(1*Math.pow(10, -6)));
         jTextArea2.setText(Float.toString(unidades3));
          }
          if (tipos.equals("Nano")) {
    unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*(float)(1*Math.pow(10, -9)));
        jTextArea2.setText(Float.toString(unidades3));
          }
           if (tipos.equals("Pico")) {
      unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*(float)(1*Math.pow(10, -12)));
        jTextArea2.setText(Float.toString(unidades3));
        }
         if (tipos.equals("Femto")) {
    unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*(float)(1*Math.pow(10, -15)));
        jTextArea2.setText(Float.toString(unidades3));
         }        
        if (tipos.equals("Atto")) {
    unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*(float)(1*Math.pow(10, -18)));
        jTextArea2.setText(Float.toString(unidades3));
        }
          if (tipos.equals("Zepto")) {
    unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*(float)(1*Math.pow(10, -21)));
         jTextArea2.setText(Float.toString(unidades3));
          }
          if (tipos.equals("Yocto")) {
    unidades3=(float) (Float.parseFloat(jTextArea2.getText().toString())*(float)(1*Math.pow(10, -24)));
        jTextArea2.setText(Float.toString(unidades3));//.000000000000000000000001
       
          }
    }//GEN-LAST:event_unidades2ActionPerformed
    public void start(Stage stage) throws Exception {
        Parent root = FXMLLoader.load(getClass().getResource("paintfxml.fxml"));
        
//        Scene scene = new Scene(root);
        
//        stage.setScene(scene);
//        stage.show();
stage.setTitle("Painting");
stage.setScene(new Scene(root));
stage.show();
    }
    public void rellenar(){
        for (int i = 0; i < n; i++) {
//        suma+Integer.parseInt(jTable1.setValueAt(i, 1).toString());
   //     capacitancia=+Integer.parseInt(jTable1.getValueAt(i, 1).toString());
     //   System.out.println(capacitancia);        
    }

}

    public float suma(){
    float capacitancia;
 float contar =jTable1.getRowCount();
 float suma=0;
    for (int i = 0; i < contar; i++) {
        suma=suma+Float.parseFloat(jTable1.getValueAt(i, 1).toString());
   //     capacitancia=+Integer.parseInt(jTable1.getValueAt(i, 1).toString());
     //   System.out.println(capacitancia);        
    }
    return suma;
    
}
public float sumaserie(){
 float capacitancia;
 float contar =jTable2.getRowCount();
 float suma=0;
    for (float i = 0; i < contar; i++) {
        suma=suma+1/Float.parseFloat(jTable2.getValueAt((int) i, 1).toString());
   //     capacitancia=+Integer.parseInt(jTable1.getValueAt(i, 1).toString());
     //   System.out.println(capacitancia);        
    }
    return 1/suma;
    
}
public float sumatotal(){
float sumatotal=((float)1/suma())+1/sumaserie();
        return 1/sumatotal;
    
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculadora().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JComboBox<String> unidades;
    private javax.swing.JComboBox<String> unidades2;
    // End of variables declaration//GEN-END:variables
}
